{"version":3,"file":"blog-grid-view-script.js","mappings":"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","sources":["webpack://kotisivu-block-theme/./src/blocks/dynamic/blog-grid/scripts/helpers.js","webpack://kotisivu-block-theme/external window [\"wp\",\"domReady\"]","webpack://kotisivu-block-theme/external window [\"wp\",\"i18n\"]","webpack://kotisivu-block-theme/webpack/bootstrap","webpack://kotisivu-block-theme/webpack/runtime/compat get default export","webpack://kotisivu-block-theme/webpack/runtime/define property getters","webpack://kotisivu-block-theme/webpack/runtime/hasOwnProperty shorthand","webpack://kotisivu-block-theme/webpack/runtime/make namespace object","webpack://kotisivu-block-theme/./src/blocks/dynamic/blog-grid/view.js"],"sourcesContent":["/**\n * Creates DOM element from given html string\n * @param {string} string \n * @returns Given html string as a DOM element\n */\nconst createPostCardNode = (string) => {\n    let element = document.createElement('div') // Create temporary 'div' -element\n    element.innerHTML = string;\n    return element.firstChild.nextSibling; // exclude temporary div from return statement\n}\n\n/**\n * Creates DOM element from given string\n * @param {string} errorMessage \n */\nconst createErrorNode = (errorMessage) => {\n    let element = document.createElement('div');\n    element.className = \"blog-post-list__error-message\";\n    element.innerHTML = `<p>${errorMessage}</p>`;\n\n    return element;\n}\n\n/**\n * Fetches posts from ajax\n * @param {*} { url, data, headers }\n * @return {*} \n */\nconst getPosts = async ({ url, data, headers }) => {\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: headers,\n        body: (new URLSearchParams(data)).toString()\n    });\n\n    const posts = await response.json();\n    \n    return {\n        posts: posts.posts,\n        postCount: posts.post_count\n    }\n}\n\n/**\n * Handle user requests about loading more blog posts\n * @return void\n */\nfunction loadMoreBlogPosts() {\n    /**\n     * Helper functions\n     */\n\n    /**\n     * Init variables\n     */\n    let postsLoaded = BLOG_POST_GRID.childElementCount; // Init to amount of child elements.\n\n    /**\n     * Send fetch request to ajax and update current page value\n     */\n    BLOG_LOAD_MORE.addEventListener('click', () => {\n        /**\n         * Fetch next posts\n         */\n        fetch(AJAX_URL, {\n            method: 'POST',\n            headers: headers,\n            body: (new URLSearchParams(data)).toString()\n        }).then((response) => response.json())\n            .then((data) => {\n                /**\n                 * Save response data\n                 */\n                let posts = data.posts;\n                let postCount = data.post_count\n\n                /** \n                 * Insert to new post elements DOM\n                 */\n                posts.forEach((post) => {\n                    BLOG_POST_GRID.append(createPostCardNode(post.content));\n                    postsLoaded++;\n                });\n\n                /**\n                 * Update current page index\n                 */\n                currentPage++;\n\n                /**\n                 * Log succesful fetch\n                 */\n                if (data.length == 0) {\n                    console.info(__('No more posts to fetch:', TEXTDOMAIN));\n                } else {\n                    console.info(__('Posts fetched succesfully:', TEXTDOMAIN), posts);\n                }\n\n                /**\n                 * If reached end of the list hide add more button\n                 */\n                if (postsLoaded == postCount) {\n                    BLOG_LOAD_MORE.disabled = true;\n                    BLOG_LOAD_MORE.setAttribute(\"aria-disabled\", \"true\");\n                }\n\n            })\n            .catch((error) => {\n                /**\n                 * Append error message to DOM\n                 */\n                BLOG_POST_GRID.append(createErrorNode(__('Error while loading more posts', TEXTDOMAIN)));\n\n                /**\n                 * Log error\n                 */\n                console.error('Error:', error);\n            });\n    });\n}\n\nexport { getPosts, createPostCardNode, createErrorNode }\n","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import domReady from '@wordpress/dom-ready';\nimport { __ } from \"@wordpress/i18n\";\nimport { getPosts, createPostCardNode, createErrorNode } from \"./scripts/helpers\";\n\n/**\n * Handle user requests about loading more blog posts\n */\ndomReady(function () {\n    let elements = {\n        container: document.getElementById(\"blog-post-container\"),\n        list: document.getElementById(\"blog-post-list\"),\n        cards: document.querySelectorAll(\".blog-grid__item\"),\n        loadMore: document.getElementById(\"blog-load-more\")\n    }\n\n    let counters = {\n        postsLoaded: elements.list.childElementCount,\n    }\n\n    let request = {\n        url: PHP_VARIABLES.ajax_url,\n        data: {\n            action: 'load_more_posts',\n            security: PHP_VARIABLES.ajax_nonce,\n            paged: 2 // Init to 2 because first page is already loaded.\n        },\n        headers: {\n            'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n        }\n    }\n\n    /**\n     * Send fetch request to ajax and update current page value\n     */\n    elements.loadMore.addEventListener('click', async () => {\n        try {\n            //Get posts from ajax\n            const data = await getPosts(request);\n\n            // Insert to new post elements DOM\n            data.posts.forEach((post) => {\n                elements.list.append(createPostCardNode(post.content));\n                counters.postsLoaded++;\n            });\n\n            //Update current page index\n            request.data.paged++;\n\n            //Log succesful fetch\n            if (data.posts.length == 0) {\n                console.info(__('No more posts to fetch:', 'kotisivu-block-theme'));\n            } else {\n                console.info(__('Posts fetched succesfully:', 'kotisivu-block-theme'), data.posts);\n            }\n\n            // If reached end of the list hide add more button\n            if (counters.postsLoaded == data.postCount) {\n                elements.loadMore.disabled = true;\n                elements.loadMore.setAttribute(\"aria-disabled\", \"true\");\n            }\n\n        } catch (err) {\n            elements.list.append(createErrorNode(__('Error while loading more posts', 'kotisivu-block-theme')));\n            console.error('Error:', err);\n        }\n    });\n});\n\n/**\n * Handle post card clicks\n */\ndomReady(function () {\n    elements.cards.forEach((card) => {\n        card.addEventListener(\"click\", () => {\n            window.location.assign(card.dataset.url);\n        });\n    });\n});\n"],"names":["createPostCardNode","string","element","document","createElement","innerHTML","firstChild","nextSibling","createErrorNode","errorMessage","className","getPosts","_ref","url","data","headers","response","fetch","method","body","URLSearchParams","toString","posts","json","postCount","post_count","loadMoreBlogPosts","postsLoaded","BLOG_POST_GRID","childElementCount","BLOG_LOAD_MORE","addEventListener","AJAX_URL","then","forEach","post","append","content","currentPage","length","console","info","__","TEXTDOMAIN","disabled","setAttribute","catch","error","domReady","elements","container","getElementById","list","cards","querySelectorAll","loadMore","counters","request","PHP_VARIABLES","ajax_url","action","security","ajax_nonce","paged","err","card","window","location","assign","dataset"],"sourceRoot":""}