{"version":3,"file":"js/blocks/blog-grid-view-script.js","mappings":"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","sources":["webpack://kotisivu-block-theme/./src/blocks/dynamic/blog-grid/scripts/helpers.js","webpack://kotisivu-block-theme/external window [\"wp\",\"domReady\"]","webpack://kotisivu-block-theme/external window [\"wp\",\"i18n\"]","webpack://kotisivu-block-theme/webpack/bootstrap","webpack://kotisivu-block-theme/webpack/runtime/compat get default export","webpack://kotisivu-block-theme/webpack/runtime/define property getters","webpack://kotisivu-block-theme/webpack/runtime/hasOwnProperty shorthand","webpack://kotisivu-block-theme/webpack/runtime/make namespace object","webpack://kotisivu-block-theme/./src/blocks/dynamic/blog-grid/view.js"],"sourcesContent":["/**\n * Creates DOM element from given html string\n * @param {string} string \n * @returns Given html string as a DOM element\n */\nconst createPostCardNode = (string) => {\n    let element = document.createElement('div') // Create temporary 'div' -element\n    element.innerHTML = string;\n    return element.firstChild; // exclude temporary div from return statement\n}\n\n/**\n * Creates DOM element from given string\n * @param {string} errorMessage \n */\nconst createErrorNode = (errorMessage) => {\n    let element = document.createElement('div');\n    element.className = \"blog-post-list__error-message\";\n    element.innerHTML = `<p>${errorMessage}</p>`;\n\n    return element;\n}\n\n/**\n * Fetches posts from ajax\n * @param {*} { url, data, headers }\n * @return {*} \n */\nconst getPosts = async ({ url, data, headers }) => {\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: headers,\n        body: (new URLSearchParams(data)).toString()\n    });\n\n    const posts = await response.json();\n\n    return {\n        posts: posts.posts,\n        postCount: posts.post_count\n    }\n}\n\nexport { getPosts, createPostCardNode, createErrorNode }\n","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import domReady from '@wordpress/dom-ready';\nimport { __ } from \"@wordpress/i18n\";\nimport { getPosts, createPostCardNode, createErrorNode } from \"./scripts/helpers\";\n\n/**\n * Handle user requests about loading more blog posts\n */\ndomReady(function () {\n    let elements = {\n        container: document.getElementById(\"blog-post-container\"),\n        list: document.getElementById(\"blog-post-list\"),\n        cards: document.querySelectorAll(\".blog-grid__item\"),\n        loadMore: document.getElementById(\"blog-load-more\")\n    }\n\n    let counters = {\n        postsLoaded: elements.list.childElementCount,\n    }\n\n    let request = {\n        url: PHP_VARIABLES.ajax_url,\n        data: {\n            action: 'load_more_posts',\n            security: PHP_VARIABLES.ajax_nonce,\n            paged: 2 // Init to 2 because first page is already loaded.\n        },\n        headers: {\n            'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n        }\n    }\n\n    /**\n     * Send fetch request to ajax and update current page value\n     */\n    elements.loadMore.addEventListener('click', async () => {\n        try {\n            //Get posts from ajax\n            const data = await getPosts(request);\n\n            // Insert to new post elements DOM\n            data.posts.forEach((post) => {\n                elements.list.append(createPostCardNode(post.content));\n                counters.postsLoaded++;\n            });\n\n            //Update current page index\n            request.data.paged++;\n\n            //Log succesful fetch\n            if (data.posts.length == 0) {\n                console.info(__('No more posts to fetch:', 'kotisivu-block-theme'));\n            } else {\n                console.info(__('Posts fetched succesfully:', 'kotisivu-block-theme'), data.posts);\n            }\n\n            // If reached end of the list hide add more button\n            if (counters.postsLoaded == data.postCount) {\n                elements.loadMore.disabled = true;\n                elements.loadMore.setAttribute(\"aria-disabled\", \"true\");\n            }\n\n        } catch (err) {\n            elements.list.append(createErrorNode(__('Error while loading more posts', 'kotisivu-block-theme')));\n            console.error('Error:', err);\n        }\n    });\n\n    /**\n     * Handle post card clicks\n     */\n    elements.cards.forEach((card) => {\n        card.addEventListener(\"click\", () => {\n            window.location.assign(card.dataset.url);\n        });\n    });\n});\n"],"names":["createPostCardNode","string","element","document","createElement","innerHTML","firstChild","createErrorNode","errorMessage","className","getPosts","async","url","data","headers","response","fetch","method","body","URLSearchParams","toString","posts","json","postCount","post_count","module","exports","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","domReady","elements","container","getElementById","list","cards","querySelectorAll","loadMore","counters","postsLoaded","childElementCount","request","PHP_VARIABLES","ajax_url","action","security","ajax_nonce","paged","addEventListener","forEach","post","append","content","length","console","info","__","disabled","setAttribute","err","error","card","location","assign","dataset"],"sourceRoot":""}