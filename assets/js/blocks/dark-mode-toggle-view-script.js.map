{"version":3,"file":"js/blocks/dark-mode-toggle-view-script.js","mappings":";mEAAAA,EAAOC,QAAUC,OAAW,GAAY,WCCpCC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,CCrBAG,EAAoBK,EAAI,SAAST,GAChC,IAAIU,EAASV,GAAUA,EAAOW,WAC7B,WAAa,OAAOX,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAI,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,ECNAN,EAAoBQ,EAAI,SAASX,EAASa,GACzC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEf,EAASc,IAC5EE,OAAOC,eAAejB,EAASc,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAX,EAAoBY,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,ECCtGlB,EAAoBsB,EAAI,SAASzB,GACX,oBAAX0B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAejB,EAAS0B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAejB,EAAS,aAAc,CAAE4B,OAAO,GACvD,oECDAC,IAAS,WACL,MAAMC,EAAOC,SAASC,qBAAqB,QAAQ,GAC7CC,EAAsBF,SAASG,iBAAiB,kBAChDC,EAAkBlC,OAAOmC,WAAW,gCAMpCC,EAAmBA,KACrBP,EAAKQ,aAAa,eAAgB,QAClCL,EAAoBM,SAASC,IACzBA,EAAIF,aAAa,aAAc,uBAAuB,GACxD,EAOAG,EAAoBA,KACtBX,EAAKQ,aAAa,eAAgB,SAClCL,EAAoBM,SAASC,IACzBA,EAAIF,aAAa,aAAc,sBAAsB,GACvD,EAiCFH,EAAgBO,SAAiD,UAAtCZ,EAAKa,aAAa,gBAC7CN,IAEAI,IAMJR,EAAoBM,SAASC,IACzBA,EAAII,iBAAiB,SAAS,KAC1B,MAAMC,EAAgBf,EAAKa,aAAa,gBAKpCR,EAAgBO,QACE,SAAlBG,EAAmCJ,IAAsBJ,IAKvC,UAAlBQ,EAAoCR,IAAqBI,IAlCjExC,OAAO6C,UAAY7C,OAAO6C,WAAa,GACvC7C,OAAO6C,UAAUC,KAAK,CAClBC,MAAO,eACPC,SAAU,mBACVC,OAAQ,sBACRtB,MAAOE,EAAKa,aAAa,kBAjB7BZ,SAASoB,OACL,kBACArB,EAAKa,aAAa,gBADlB,oDAwDiB,GACnB,GAEV","sources":["webpack://kotisivu-block-theme/external window [\"wp\",\"domReady\"]","webpack://kotisivu-block-theme/webpack/bootstrap","webpack://kotisivu-block-theme/webpack/runtime/compat get default export","webpack://kotisivu-block-theme/webpack/runtime/define property getters","webpack://kotisivu-block-theme/webpack/runtime/hasOwnProperty shorthand","webpack://kotisivu-block-theme/webpack/runtime/make namespace object","webpack://kotisivu-block-theme/./src/blocks/dynamic/dark-mode-toggle/view.js"],"sourcesContent":["module.exports = window[\"wp\"][\"domReady\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import domReady from '@wordpress/dom-ready';\n\n/**\n * On DOM ready\n */\ndomReady(function () {\n    const html = document.getElementsByTagName(\"html\")[0];\n    const schemeToggleButtons = document.querySelectorAll(\".scheme-toggle\");\n    const prefersDarkMode = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n    /**\n     * Switch to dark mode\n     * @return {void}\n     */\n    const switchToDarkMode = () => {\n        html.setAttribute(\"color-scheme\", \"dark\");\n        schemeToggleButtons.forEach((btn) => {\n            btn.setAttribute(\"aria-label\", \"Switch to light mode\");\n        });\n    };\n\n    /**\n     * Switch to light mode\n     * @return {void}\n     */\n    const switchToLightMode = () => {\n        html.setAttribute(\"color-scheme\", \"light\");\n        schemeToggleButtons.forEach((btn) => {\n            btn.setAttribute(\"aria-label\", \"Switch to dark mode\");\n        });\n    };\n\n    /** \n     * Add cookie to user browser according to used scheme\n     * Cookie age is set to 30 days\n     * @return {void}\n     */\n    const setSchemeCookie = () => {\n        document.cookie =\n            \"color-scheme = \" +\n            html.getAttribute(\"color-scheme\") +\n            \"; \" +\n            \"max-age=2592000; path=/; samesite=strict; secure\";\n    };\n\n    /**\n     * Write to dataLayer\n     * @return {void}\n     */\n    const writeToDataLayer = () => {\n        window.dataLayer = window.dataLayer || [];\n        window.dataLayer.push({\n            event: \"button_click\",\n            category: \"site_preferences\",\n            action: \"switch_color_scheme\",\n            value: html.getAttribute(\"color-scheme\"),\n        });\n    };\n\n    /**\n     * Initialize scheme\n     */\n    if (prefersDarkMode.matches && html.getAttribute(\"color-scheme\") !== \"light\") {\n        switchToDarkMode();\n    } else {\n        switchToLightMode();\n    }\n\n    /**\n     * Loop through all elements including '.scheme-toggle' class\n     */\n    schemeToggleButtons.forEach((btn) => {\n        btn.addEventListener(\"click\", () => {\n            const currentScheme = html.getAttribute(\"color-scheme\");\n\n            /**\n             * Switch to dark mode if user prefers dark mode\n             */\n            if (prefersDarkMode.matches) {\n                currentScheme === \"dark\" || null ? switchToLightMode() : switchToDarkMode();\n            } else {\n                /**\n                 * Else switch to light mode\n                 */\n                currentScheme === \"light\" || null ? switchToDarkMode() : switchToLightMode();\n            }\n\n            /**\n             * Write event to dataLayer\n             */\n            writeToDataLayer();\n\n            /**\n             * Set cookie according to used scheme\n             */\n            setSchemeCookie();\n        });\n    });\n});\n"],"names":["module","exports","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","domReady","html","document","getElementsByTagName","schemeToggleButtons","querySelectorAll","prefersDarkMode","matchMedia","switchToDarkMode","setAttribute","forEach","btn","switchToLightMode","matches","getAttribute","addEventListener","currentScheme","dataLayer","push","event","category","action","cookie"],"sourceRoot":""}