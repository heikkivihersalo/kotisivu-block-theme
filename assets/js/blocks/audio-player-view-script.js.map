{"version":3,"file":"js/blocks/audio-player-view-script.js","mappings":";8UAoPA,UAtOoBA,EAAGC,YAAWC,eACjC,MAAM,UAAEC,EAAS,aAAEC,IAAiBC,EAAAA,EAAAA,YAAWC,EAAAA,UACxCC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,IACpCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,IAC1CG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,GAiDnD,SAASK,EAAUC,GAClB,MAAMC,EAAUC,KAAKC,MAAMH,EAAU,IAC/BI,EAAcJ,EAAoB,GAAVC,EAE9B,MAAQ,GAAEA,KAAWG,EAAc,GAAK,IAAM,KAAKA,GACpD,CAiEA,OArHAC,EAAAA,EAAAA,YAAU,KACeC,WACvB,GAAIlB,EACH,OAAQO,GACP,KAAK,GAOL,KAAK,GAOL,KAAK,GAOL,KAAK,SACEY,EAAAA,EAAAA,4BACLpB,EAASqB,QACThB,EACA,UAMJ,EAGDiB,EAAiB,GACf,CAACd,KA+EHe,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACCD,EAAAA,EAAAA,eAAA,OAAKE,UAAU,eAAeC,SAAS,KAAK,cAAY,SACvDH,EAAAA,EAAAA,eAAA,OAAKE,UAAU,uBACdF,EAAAA,EAAAA,eAAA,UACCE,UAAU,4CACV,aAAYxB,EAAY,QAAU,OAClC0B,QAjELR,eAA6BS,SACtB1B,GAAcD,GAEpB,MAAM4B,EAAc9B,EAAUsB,QAE1BpB,GACH4B,EAAYC,SACZV,EAAAA,EAAAA,4BACCpB,EAASqB,QACTQ,EAAYE,YACZ,WAGDF,EAAYG,QACZZ,EAAAA,EAAAA,4BACCpB,EAASqB,QACTQ,EAAYE,YACZ,QAGH,EA8CKL,UAAW,EACX,cAAY,SAEZH,EAAAA,EAAAA,eAAA,QAAME,UAAU,sBACdxB,GACEgC,EAAAA,EAAAA,IAAG,QAAS,yBACZA,EAAAA,EAAAA,IAAG,OAAQ,yBAEdhC,GAAYsB,EAAAA,EAAAA,eAACW,EAAAA,WAAU,OAAMX,EAAAA,EAAAA,eAACY,EAAAA,WAAU,QAE1CZ,EAAAA,EAAAA,eAAA,OAAKE,UAAU,gCACdF,EAAAA,EAAAA,eAAA,OAAKE,UAAU,8BACdF,EAAAA,EAAAA,eAAA,WAAKU,EAAAA,EAAAA,IAAG,cAAe,0BACvBV,EAAAA,EAAAA,eAAA,OAAKE,UAAU,0BACdF,EAAAA,EAAAA,eAAA,QAAME,UAAU,8BACdzB,EAASqB,SAASe,SAEpBb,EAAAA,EAAAA,eAAA,QAAME,UAAU,8BACdzB,EAASqB,SAASgB,eAItBd,EAAAA,EAAAA,eAAA,KAAGE,UAAU,6BACVzB,EAASqB,SAASiB,SACnBL,EAAAA,EAAAA,IAAG,aAAc,wBACjBjC,EAASqB,SAASiB,SAClBf,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACCD,EAAAA,EAAAA,eAAA,QAAME,UAAU,wBACdzB,EAASqB,SAASiB,QACb,IACL,KACFf,EAAAA,EAAAA,eAAA,QAAME,UAAU,uBACdzB,EAASqB,SAASkB,UAMtBvC,EAASqB,SAASmB,eAGnBjB,EAAAA,EAAAA,eAAA,OACCE,UAAU,sBACVgB,IAAKzC,EAASqB,SAASmB,cAAcC,IACrCC,MAAO1C,EAASqB,SAASmB,cAAcE,MACvCC,OAAQ3C,EAASqB,SAASmB,cAAcG,OACxCC,IAAK5C,EAASqB,SAASmB,cAAcI,OAPtCrB,EAAAA,EAAAA,eAACsB,EAAAA,YAAW,QAWdtB,EAAAA,EAAAA,eAAA,OAAKE,UAAU,2BACdF,EAAAA,EAAAA,eAAA,OAAKE,UAAU,mCACdF,EAAAA,EAAAA,eAAA,QAAME,UAAU,uBACdQ,EAAAA,EAAAA,IAAG,eAAgB,yBAEpBrB,EAAUP,KAEZkB,EAAAA,EAAAA,eAAA,SAAOuB,QAAQ,iBAAiBrB,UAAU,uBACxCQ,EAAAA,EAAAA,IAAG,WAAY,0BAEjBV,EAAAA,EAAAA,eAAA,SACCwB,KAAK,QACLC,GAAG,iBACHC,MAAO5C,EACP6C,IAAK,EACLC,IAAKzC,EACL0C,SAvFLjC,eAAyCS,GACxC,MAAMyB,EAAWC,WAAW1B,EAAM2B,OAAON,aACnC3C,EAAa+C,GACnBtD,EAAUsB,QAAQU,YAAcsB,EAE5BpD,IACHmB,EAAAA,EAAAA,4BAA2BpB,EAASqB,QAASgC,EAAU,OAEzD,EAgFK,iBAAiB,GAAEhD,YACnBqB,UAAW,KAEZH,EAAAA,EAAAA,eAAA,OAAKE,UAAU,oCACdF,EAAAA,EAAAA,eAAA,QAAME,UAAU,uBACdQ,EAAAA,EAAAA,IAAG,iBAAkB,yBAEtBrB,EAAUF,OAIda,EAAAA,EAAAA,eAAA,SACCE,UAAU,qBACV+B,UAAQ,EACRC,IAAK1D,EACL0C,IAAKzC,EAASqB,SAASoB,IACvBiB,iBA3HHvC,uBACOR,EAAiBI,KAAK4C,MAAM5D,EAAUsB,QAAQuC,UACrD,EA0HGC,aApHH1C,uBACOb,EAAaS,KAAK4C,MAAM5D,EAAUsB,QAAQU,oBAC1CtB,EAAgBM,KAAK4C,MAAOtD,EAAYK,EAAiB,KAChE,EAkHGoD,OAAQA,IAAM5D,GAAa,GAC3B6D,QAASA,IAAM7D,GAAa,MAE7BqB,EAAAA,EAAAA,eAAA,KAAGE,UAAU,sBAAuB,IAAEQ,EAAAA,EAAAA,IACrC,mBACA,2BACIjC,EAASqB,SAASkB,UAASN,EAAAA,EAAAA,IAC/B,cACA,2BACIjC,EAASqB,SAASiB,UACrB,qHC/OL,MAAMlC,GAAgB4D,EAAAA,EAAAA,eAAc,MAEpC,6jBCAA,SAASC,EAAcjE,GACnB,MAAOkE,EAAOC,IAAY5D,EAAAA,EAAAA,UAAS,KAC5B6D,EAAWC,IAAgB9D,EAAAA,EAAAA,WAAS,GAoC3C,OAlCAW,EAAAA,EAAAA,YAAU,KACWC,WACb,IAAI+C,QAAcI,EAAAA,EAAAA,eAAc,CAC5BC,SAAU,GACVC,WAAY,gBAGVL,EAASD,GAEflE,EAASqB,QAAU,CACf2B,GAAI,EACJyB,MAAOP,EAAM,IAAIO,OAAOC,SACxBnC,MAAO2B,EAAM,IAAIS,eAAepC,MAChCD,OAAQ4B,EAAM,IAAIS,eAAerC,OACjCF,OAAQ8B,EAAM,IAAIS,eAAeC,WACjCvC,WAAY6B,EAAM,IAAIS,eAAeE,YACrCpC,IAAKyB,EAAM,IAAIY,WACflB,SAAUM,EAAM,IAAIS,eAAeI,OACnCC,kBAAmBd,EAAM,IAAIS,eAAeM,iBAC5CzC,cAAe,CACXC,IAAKyB,EAAM,IAAIgB,UAAUC,gBAAgBC,IACzCxC,IAAKsB,EAAM,IAAIgB,UAAUC,gBAAgBvC,IACzCD,OAAQuB,EAAM,IAAIgB,UAAUC,gBAAgBxC,OAC5CD,MAAOwB,EAAM,IAAIgB,UAAUC,gBAAgBzC,MAC3C+B,MAAOP,EAAM,IAAIgB,UAAUC,gBAAgBV,QAInDJ,GAAa,EAAM,EAGvBgB,EAAU,GACX,IAEI,CAACnB,EAAOE,EACnB,+KCxCA,SAASkB,EAAoBC,GACzB,MAAMC,GAAcC,EAAAA,EAAAA,QAAO,OACpBC,EAAWC,IAAgBpF,EAAAA,EAAAA,WAAS,GAErCqF,EAAcC,IAChBA,EAAQC,SAAQC,IACRA,EAAMC,gBACNL,GAAa,EACjB,GACF,EAYN,OATAzE,EAAAA,EAAAA,YAAU,KACN,MAAM+E,EAAW,IAAIC,qBAAqBN,EAAYL,GAGtD,OAFIC,EAAYnE,SAAS4E,EAASE,QAAQX,EAAYnE,SAE/C,KACCmE,EAAYnE,SAAS4E,EAASG,UAAUZ,EAAYnE,QAAQ,CACnE,GACF,CAACmE,EAAYnE,QAASkE,IAElB,CAACC,EAAaE,EACzB,kkBCxBA,MAAM7C,EAAewD,IACpB9E,EAAAA,EAAAA,eAAA,OACCE,UAAU,oCACV6E,MAAM,6BACNC,SAAS,WACT7D,MAAO,IACPC,OAAQ,IACR6D,MAAO,CACNC,SAAU,UACVC,SAAU,UACVC,eAAgB,QAChBC,iBAAkB,GAEnBC,QAAQ,iBACJR,IAEJ9E,EAAAA,EAAAA,eAAA,QACCuF,EAAE,kBACFN,MAAO,CACNO,KAAM,0KCnBV,MAAM5E,EAAckE,IACnB9E,EAAAA,EAAAA,eAAA,OACC+E,MAAM,6BACNC,SAAS,WACTC,MAAO,CACNC,SAAU,UACVC,SAAU,UACVC,eAAgB,QAChBC,iBAAkB,GAEnBC,QAAQ,gBACN,cAAY,UACVR,IAEJ9E,EAAAA,EAAAA,eAAA,QACCuF,EAAE,4JACFN,MAAO,CACNO,KAAM,oMCjBV,MAAM7E,EAAcmE,IACnB9E,EAAAA,EAAAA,eAAA,OACC+E,MAAM,6BACNC,SAAS,WACTC,MAAO,CACNC,SAAU,UACVC,SAAU,UACVC,eAAgB,QAChBC,iBAAkB,GAEnBC,QAAQ,gBACN,cAAY,UACVR,IAEJ9E,EAAAA,EAAAA,eAAA,QACCuF,EAAE,qMACFN,MAAO,CACNO,KAAM,qPCGV5F,eAAemD,EAAc0C,EAAS,MAIpC,IAAIC,EAAa,IAAIC,IAAIC,OAAOC,SAASC,OAAS,gBAKlD,IAAK,MAAOC,EAAKrE,KAAUsE,OAAO1B,QAAQmB,GACxCC,EAAWO,aAAaC,OAAOH,EAAKrE,GAOtC,aAJsByE,IAAS,CAAEC,KAAMV,EAAWW,SAAWX,EAAWY,SAAUC,MAAMC,GAC/EA,GAIX,CAEA,SAASC,EAAoBC,GAC3B,MAAMC,EAAc,CAClB,UAAW,KAGb,IAAK,MAAMC,KAAUD,EACnB,GAAID,EAAIG,QAAQD,IAAW,EAAG,CAE5B,OADeF,EAAII,WAAWF,EAAQD,EAAYC,GAEpD,CAEF,OAAOF,CACT,idC/CA,MAAMK,EAAkBnH,SACG,CAAC,OAAQ,QAAS,WAAY,OAAQ,UACvCoH,SAASC,GAAUA,EAAS,YAQhDC,EAAatH,OAAS6B,KAAIyB,QAAOnC,SAAQC,QAAOF,aAAYD,aACvD,CACHY,KACAyB,QACAnC,SACAC,QACAmG,KAAM,CACFrG,aACAD,YAWNuG,EAAkBA,CAAC5G,EAAa6B,KAClC,MAAMgF,EAAU7H,KAAK4C,MAAO5B,EAAc6B,EAAY,KAChDiF,EAAS,CACX,EAAK,GACL,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,KAGV,IAAK,IAAIC,KAASD,EACd,GAAID,GAAWC,EAAOC,GAClB,OAAOA,CAEf,EAQEC,EAAkB5H,SACb6H,EAAOC,KAAI,CAACC,EAAOC,KAAU,CAChCnG,GAAImG,EACJ1E,MAAOyE,GAAOzE,MAAMC,SACpBpC,OAAQ4G,GAAOvE,eAAerC,OAC9BC,MAAO2G,GAAOvE,eAAepC,MAC7BmG,KAAM,CACFrG,WAAY6G,GAAOvE,eAAeE,YAClCzC,OAAQ8G,GAAOvE,eAAeC,YAElCwE,KAAM,CACFxF,SAAUsF,GAAOvE,eAAeI,OAChCC,kBAAmBkE,GAAOvE,eAAeM,sBAYrD9D,eAAeC,EAA2BiI,EAAMtH,EAAayG,GACzD,MAAMc,QAAmBhB,EAAgBE,GACnCe,QAAoBZ,EAAgB5G,EAAasH,GAAMzF,UACvD4F,QAAiBf,EAAWY,GAC5BI,EAAW,CACbpI,QAASN,KAAK4C,MAAM5B,GACpB6B,SAAUyF,GAAMzF,SAChBgF,QAAS7H,KAAK4C,MAAO5B,EAAcsH,GAAMzF,SAAY,MAGzDuD,OAAOuC,UAAYvC,OAAOuC,WAAa,GAEpB,SAAfJ,GAAwC,WAAfA,GACzBnC,OAAOuC,UAAUC,KAAK,CAClB/H,MAAQ,SAAQ0H,IAChBD,KAAMG,EACNJ,KAAMK,IAIdtC,OAAOuC,UAAUC,KAAK,CAClB/H,MAAQ,SAAQ4G,KAAUe,IAC1BF,KAAMG,EACNJ,KAAMK,GAEd,CAQAtI,eAAeyI,EAA+BZ,GAC1C7B,OAAOuC,UAAYvC,OAAOuC,WAAa,GACvCvC,OAAOuC,UAAUC,KAAK,CAClB/H,MAAO,oBACPiI,YAAad,EAAgBC,IAErC,sCCvHAc,EAAOC,QAAU5C,OAAW,GAAY,6CCAxC2C,EAAOC,QAAU5C,OAAW,GAAY,2CCAxC2C,EAAOC,QAAU5C,OAAW,GAAW,uCCAvC2C,EAAOC,QAAU5C,OAAW,GAAQ,OCChC6C,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaJ,QAGrB,IAAID,EAASE,EAAyBE,GAAY,CAGjDH,QAAS,CAAC,GAOX,OAHAM,EAAoBH,GAAUJ,EAAQA,EAAOC,QAASE,GAG/CH,EAAOC,OACf,CCrBAE,EAAoBK,EAAI,SAASR,GAChC,IAAIS,EAAST,GAAUA,EAAOU,WAC7B,WAAa,OAAOV,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAG,EAAoBnD,EAAEyD,EAAQ,CAAEE,EAAGF,IAC5BA,CACR,ECNAN,EAAoBnD,EAAI,SAASiD,EAASW,GACzC,IAAI,IAAIpD,KAAOoD,EACXT,EAAoBU,EAAED,EAAYpD,KAAS2C,EAAoBU,EAAEZ,EAASzC,IAC5EC,OAAOqD,eAAeb,EAASzC,EAAK,CAAEuD,YAAY,EAAMC,IAAKJ,EAAWpD,IAG3E,ECPA2C,EAAoBU,EAAI,SAASI,EAAKC,GAAQ,OAAOzD,OAAO0D,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,ECCtGf,EAAoBmB,EAAI,SAASrB,GACX,oBAAXsB,QAA0BA,OAAOC,aAC1C/D,OAAOqD,eAAeb,EAASsB,OAAOC,YAAa,CAAErI,MAAO,WAE7DsE,OAAOqD,eAAeb,EAAS,aAAc,CAAE9G,OAAO,GACvD,mdCwBA,MAAMsI,EAAWA,KAEb,MAAMvL,GAAWyF,EAAAA,EAAAA,QAAO,MAClB+F,GAAgB/F,EAAAA,EAAAA,QAAO,GACvB1F,GAAY0F,EAAAA,EAAAA,QAAO,OAGlBxF,EAAWC,IAAgBK,EAAAA,EAAAA,WAAS,IAIpC,CAAEkL,IAAkBlL,EAAAA,EAAAA,UAASmL,KAAKC,QAKlCzH,EAAOE,IAAaH,EAAAA,EAAAA,eAAcjE,IAKlCwF,EAAaE,IAAaJ,EAAAA,EAAAA,qBAAoB,CACjDsG,KAAM,KACNC,WAAY,MACZC,UAAW,KAWf3K,eAAe4K,IACX,MAAMlK,EAAc9B,EAAUsB,QAExB2K,QAAiB9H,EAAM+H,MAAK,CAACC,EAAM/C,KACrC,GAAIA,IAAUqC,EAAcnK,QACxB,OAAO6K,CACX,IAGJlM,EAASqB,QAAU,CACf2B,GAAIwI,EAAcnK,QAClBoD,MAAOuH,EAASvH,MAAMC,SACtBnC,MAAOyJ,EAASrH,eAAepC,MAC/BD,OAAQ0J,EAASrH,eAAerC,OAChCF,OAAQ4J,EAASrH,eAAeC,WAChCvC,WAAY2J,EAASrH,eAAeE,YACpCpC,IAAKuJ,EAASlH,WACdlB,SAAUoI,EAASrH,eAAeI,OAClCC,kBAAmBgH,EAASrH,eAAeM,iBAC3CzC,cAAe,CACXC,IAAKuJ,EAAS9G,UAAUC,gBAAgBC,IACxCxC,IAAKoJ,EAAS9G,UAAUC,gBAAgBvC,IACxCD,OAAQqJ,EAAS9G,UAAUC,gBAAgBxC,OAC3CD,MAAOsJ,EAAS9G,UAAUC,gBAAgBzC,MAC1C+B,MAAOuH,EAAS9G,UAAUC,gBAAgBV,cAO5CgH,EAAeC,KAAKC,OACZQ,SAASC,cAAe,iDAChCC,QAKDpM,IACL4B,EAAYG,OACZ9B,GAAa,IACbkB,EAAAA,EAAAA,4BACIpB,EAASqB,QACTQ,EAAYE,YACZ,QAER,CA4DAZ,eAAemL,EAAoB1K,GAC/B,MAAMC,EAAc9B,EAAUsB,QACxBkL,EAAkBC,SAASL,SAASM,cAAcC,QAAQ1J,IAkDhE,OAAQpB,EAAM0F,KACV,IAAK,IACD,GAAIiF,IAAoBf,EAAcnK,QA/C3BF,WACXlB,GACA4B,EAAYC,QACZ5B,GAAa,IACbkB,EAAAA,EAAAA,4BACIpB,EAASqB,QACTQ,EAAYE,YACZ,WAGJF,EAAYG,OACZ9B,GAAa,IACbkB,EAAAA,EAAAA,4BACIpB,EAASqB,QACTQ,EAAYE,YACZ,QAER,EA+BQ4K,OACG,CACHnB,EAAcnK,QAAUkL,EACxB,MAAMP,QAAiB9H,EAAM+H,MAAK,CAACC,EAAM/C,KACrC,GAAIoD,IAAoBpD,EACpB,OAAO+C,CACX,IAGJlM,EAASqB,QAAU,CACf2B,GAAIwI,EAAcnK,QAClBoD,MAAOuH,EAASvH,MAAMC,SACtBnC,MAAOyJ,EAASrH,eAAepC,MAC/BD,OAAQ0J,EAASrH,eAAerC,OAChCF,OAAQ4J,EAASrH,eAAeC,WAChCvC,WAAY2J,EAASrH,eAAeE,YACpCpC,IAAKuJ,EAASlH,WACdlB,SAAUoI,EAASrH,eAAeI,OAClCC,kBAAmBgH,EAASrH,eAAeM,iBAC3CzC,cAAe,CACXC,IAAKuJ,EAAS9G,UAAUC,gBAAgBC,IACxCxC,IAAKoJ,EAAS9G,UAAUC,gBAAgBvC,IACxCD,OAAQqJ,EAAS9G,UAAUC,gBAAgBxC,OAC3CD,MAAOsJ,EAAS9G,UAAUC,gBAAgBzC,MAC1C+B,MAAOuH,EAAS9G,UAAUC,gBAAgBV,cAK5CgH,EAAeC,KAAKC,OAG1B5L,EAAUsB,QAAQW,OAClB9B,GAAa,IACbkB,EAAAA,EAAAA,4BACIpB,EAASqB,QACTQ,EAAYE,YACZ,OAER,CACA,MACJ,IAAK,YAC4B,OAAzBH,EAAM2B,OAAOqJ,SAAkBhL,EAAMiL,sBAnEhC1L,WACTqK,EAAcnK,UAAY6C,EAAMa,OAAS,EACzCyG,EAAcnK,QAAU,EAExBmK,EAAcnK,QAAUmK,EAAcnK,QAAU,CACpD,EA+DUyL,GACNf,IAEA,MACJ,IAAK,UAC4B,OAAzBnK,EAAM2B,OAAOqJ,SAAkBhL,EAAMiL,sBA9DlC1L,WACmB,IAA1BqK,EAAcnK,QACdmK,EAAcnK,QAAU6C,EAAMa,OAAS,EAEvCyG,EAAcnK,QAAUmK,EAAcnK,QAAU,CACpD,EA0DU0L,GACNhB,UAUFN,EAAeC,KAAKC,MAC9B,CAMA,OA5OAzK,EAAAA,EAAAA,YAAU,KACFwE,GAA8B,IAAjBxB,EAAMa,SAAc6E,EAAAA,EAAAA,gCAA+B1F,EAAM,GAC3E,CAACwB,EAAWxB,KA2OX3C,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,eAACnB,EAAAA,QAAAA,SAAsB,CAAC6C,MAAO,CAAEhD,YAAWC,kBACtCgE,EAAMa,QAAUX,IAAa7C,EAAAA,EAAAA,eAAA,YAAMU,EAAAA,EAAAA,IAAG,aAAc,0BACnDiC,EAAMa,SAAWX,IAAc7C,EAAAA,EAAAA,eAAA,YAAMU,EAAAA,EAAAA,IAAG,uBAAwB,0BAChEmC,GAAaF,EAAMa,OAAS,IAC3BxD,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,eAACzB,EAAAA,QAAW,CAACC,UAAWA,EAAWC,SAAUA,KAC7CuB,EAAAA,EAAAA,eAAA,MACIkC,IAAK+B,EACL/D,UAAU,qBACV,cAAYQ,EAAAA,EAAAA,IAAG,WAAY,wBAC3B+K,KAAK,OACLC,UAAYC,GAAMZ,EAAoBY,IAErChJ,EAAM+E,KAAI,CAACiD,EAAM/C,KACd,MAAMT,EAAO,CACT1F,GAAImG,EACJ1E,MAAOyH,EAAKzH,MAAMC,SAClBnC,MAAO2J,EAAKvH,eAAepC,MAC3BD,OAAQ4J,EAAKvH,eAAerC,OAC5BF,OAAQ8J,EAAKvH,eAAeC,WAC5BvC,WAAY6J,EAAKvH,eAAeE,YAChCpC,IAAKyJ,EAAKpH,WACVlB,SAAUsI,EAAKvH,eAAeI,OAC9BC,kBAAmBkH,EAAKvH,eAAeM,iBACvCzC,cAAe,CACXC,IAAKyJ,EAAKhH,UAAUC,gBAAgBC,IACpCxC,IAAKsJ,EAAKhH,UAAUC,gBAAgBvC,IACpCD,OAAQuJ,EAAKhH,UAAUC,gBAAgBxC,OACvCD,MAAOwJ,EAAKhH,UAAUC,gBAAgBzC,MACtC+B,MAAOyH,EAAKhH,UAAUC,gBAAgBV,QAI9C,OACIlD,EAAAA,EAAAA,eAAA,MACI+F,IAAKoB,EAAK1F,GACVvB,UAAU,0BACVuL,KAAK,WACLrL,QAAUC,GAtN9CT,eAAiCS,EAAOuH,EAAOT,GAC3C,MAAM7G,EAAc9B,EAAUsB,QACxB8L,EAAWnN,EAASqB,QAgB1B,GAXArB,EAASqB,QAAUqH,EACnB8C,EAAcnK,QAAU8H,QAKlBsC,EAAeC,KAAKC,OAKtB1L,GAAaD,EAASqB,QAAQ2B,KAAOmK,EAASnK,GAQ9C,OAPAnB,EAAYC,QACZ5B,GAAa,QACbkB,EAAAA,EAAAA,4BACIpB,EAASqB,QACTQ,EAAYE,YACZ,SAQRF,EAAYG,OACZ9B,GAAa,IAKbkB,EAAAA,EAAAA,4BACIpB,EAASqB,QACTQ,EAAYE,YACZ,OAER,CA2KwDqL,CAAkBxL,EAAOuH,EAAOT,GACpD,UAASA,EAAK1F,GACd,WAAU0F,EAAKjG,IACf,aAAYiG,EAAKnG,MACjB,cAAamG,EAAKpG,OAClB,cAAaoG,EAAKtG,OAClB,kBAAiBsG,EAAKrG,WACtB,aAAa,IAAEJ,EAAAA,EAAAA,IAAG,YAAa,2BAA2BkH,EAAQ,MAAKlH,EAAAA,EAAAA,IAAG,KAAM,2BAA2BiC,EAAMa,WAAU9C,EAAAA,EAAAA,IAAG,cAAe,0BAC7I,eAAcuJ,EAAcnK,UAAY8H,EAAQ,OAAS,QACzDzH,SAAS,MAETH,EAAAA,EAAAA,eAAA,QAAME,UAAU,iCAAgCuG,EAAAA,EAAAA,qBAAoBU,EAAKjE,QACvEiE,EAAKlG,cAAcC,KACjBlB,EAAAA,EAAAA,eAAA,OACIE,UAAU,gCACV,cAAY,OACZgB,IAAKiG,EAAKlG,cAAcC,IACxBG,IAAK8F,EAAKlG,cAAcI,IACxBD,OAAQ+F,EAAKlG,cAAcG,OAC3BD,MAAOgG,EAAKlG,cAAcE,SAPPnB,EAAAA,EAAAA,eAACsB,EAAAA,YAAW,MAUtC,OAO9B,EAIXwK,KAASlM,kBACLmM,EAAAA,EAAAA,YACInB,SAASoB,eAAe,iBAAiBC,QAAOjM,EAAAA,EAAAA,eAACgK,EAAQ,MAEjE","sources":["webpack://kotisivu-block-theme/./src/blocks/dynamic/audio-player/components/AudioPlayer.jsx","webpack://kotisivu-block-theme/./src/blocks/dynamic/audio-player/context/PlayerContext.js","webpack://kotisivu-block-theme/./src/blocks/dynamic/audio-player/hooks/lib/useMediaFiles.js","webpack://kotisivu-block-theme/./src/blocks/dynamic/audio-player/hooks/lib/usePlaylistOnScreen.js","webpack://kotisivu-block-theme/./src/blocks/dynamic/audio-player/icons/lib/Placeholder.jsx","webpack://kotisivu-block-theme/./src/blocks/dynamic/audio-player/icons/lib/PlayButton.jsx","webpack://kotisivu-block-theme/./src/blocks/dynamic/audio-player/icons/lib/StopButton.jsx","webpack://kotisivu-block-theme/./src/blocks/dynamic/audio-player/scripts/helpers.js","webpack://kotisivu-block-theme/./src/features/analytics/lib/music-player.js","webpack://kotisivu-block-theme/external window [\"wp\",\"apiFetch\"]","webpack://kotisivu-block-theme/external window [\"wp\",\"domReady\"]","webpack://kotisivu-block-theme/external window [\"wp\",\"element\"]","webpack://kotisivu-block-theme/external window [\"wp\",\"i18n\"]","webpack://kotisivu-block-theme/webpack/bootstrap","webpack://kotisivu-block-theme/webpack/runtime/compat get default export","webpack://kotisivu-block-theme/webpack/runtime/define property getters","webpack://kotisivu-block-theme/webpack/runtime/hasOwnProperty shorthand","webpack://kotisivu-block-theme/webpack/runtime/make namespace object","webpack://kotisivu-block-theme/./src/blocks/dynamic/audio-player/view.js"],"sourcesContent":["import { __ } from \"@wordpress/i18n\";\nimport { useState, useContext, useEffect } from \"@wordpress/element\";\n\nimport { PlayButton, StopButton, Placeholder } from \"../icons\";\n\nimport PlayerContext from \"../context/PlayerContext\";\nimport { pushMusicEventsToDatalayer } from \"@features/analytics\";\n\n/**\n * Audio player component\n *\n * @param {*} { id, title, src, album, artist, format, sampleRate }\n * @return {*}\n */\nconst AudioPlayer = ({ playerRef, trackRef }) => {\n\tconst { isPlaying, setIsPlaying } = useContext(PlayerContext);\n\tconst [mediaTime, setMediaTime] = useState(0);\n\tconst [mediaPercent, setMediaPercent] = useState(0);\n\tconst [mediaDuration, setMediaDuration] = useState(0);\n\n\tuseEffect(() => {\n\t\tconst sendStreamEvent = async () => {\n\t\t\tif (isPlaying) {\n\t\t\t\tswitch (mediaPercent) {\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\tawait pushMusicEventsToDatalayer(\n\t\t\t\t\t\t\ttrackRef.current,\n\t\t\t\t\t\t\tmediaTime,\n\t\t\t\t\t\t\t\"stream\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 26:\n\t\t\t\t\t\tawait pushMusicEventsToDatalayer(\n\t\t\t\t\t\t\ttrackRef.current,\n\t\t\t\t\t\t\tmediaTime,\n\t\t\t\t\t\t\t\"stream\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 51:\n\t\t\t\t\t\tawait pushMusicEventsToDatalayer(\n\t\t\t\t\t\t\ttrackRef.current,\n\t\t\t\t\t\t\tmediaTime,\n\t\t\t\t\t\t\t\"stream\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 76:\n\t\t\t\t\t\tawait pushMusicEventsToDatalayer(\n\t\t\t\t\t\t\ttrackRef.current,\n\t\t\t\t\t\t\tmediaTime,\n\t\t\t\t\t\t\t\"stream\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tsendStreamEvent();\n\t}, [mediaPercent]);\n\n\t/**\n\t * Converts seconds to a time stamp (mm:ss)\n\t *\n\t * @param {Number} seconds\n\t * @return {String} Time stamp\n\t */\n\tfunction timeStamp(seconds) {\n\t\tconst minutes = Math.floor(seconds / 60);\n\t\tconst secondsLeft = seconds - minutes * 60;\n\n\t\treturn `${minutes}:${secondsLeft < 10 ? \"0\" : \"\"}${secondsLeft}`;\n\t}\n\n\t/**\n\t * Toggles the playing state of the audio player\n\t * @param {Object} event\n\t * @return {Void}\n\t */\n\tasync function togglePlaying(event) {\n\t\tawait setIsPlaying(!isPlaying);\n\n\t\tconst audioPlayer = playerRef.current;\n\n\t\tif (isPlaying) {\n\t\t\taudioPlayer.pause();\n\t\t\tpushMusicEventsToDatalayer(\n\t\t\t\ttrackRef.current,\n\t\t\t\taudioPlayer.currentTime,\n\t\t\t\t\"pause\"\n\t\t\t);\n\t\t} else {\n\t\t\taudioPlayer.play();\n\t\t\tpushMusicEventsToDatalayer(\n\t\t\t\ttrackRef.current,\n\t\t\t\taudioPlayer.currentTime,\n\t\t\t\t\"play\"\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the media duration\n\t * @return {Void}\n\t */\n\tasync function onLoadedMetadata() {\n\t\tawait setMediaDuration(Math.round(playerRef.current.duration));\n\t}\n\n\t/**\n\t * Sets the media time\n\t * @return {Void}\n\t */\n\tasync function onTimeUpdate() {\n\t\tawait setMediaTime(Math.round(playerRef.current.currentTime));\n\t\tawait setMediaPercent(Math.round((mediaTime / mediaDuration) * 100));\n\t}\n\n\t/**\n\t * Handles the change of the audio timeline\n\t * @param {Object} event\n\t * @return {Void}\n\t */\n\n\tasync function handleAudioTimelineChange(event) {\n\t\tconst playhead = parseFloat(event.target.value);\n\t\tawait setMediaTime(playhead);\n\t\tplayerRef.current.currentTime = playhead;\n\n\t\tif (isPlaying) {\n\t\t\tpushMusicEventsToDatalayer(trackRef.current, playhead, \"seek\");\n\t\t}\n\t}\n\n\t/**\n\t * Return the audio player\n\t */\n\treturn (\n\t\t<>\n\t\t\t<div className=\"audio-player\" tabIndex=\"-1\" aria-hidden=\"true\">\n\t\t\t\t<div className=\"audio-player__info\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"audio-player__btn audio-player__btn--play\"\n\t\t\t\t\t\tdata-state={isPlaying ? \"pause\" : \"play\"}\n\t\t\t\t\t\tonClick={togglePlaying}\n\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"is-visually-hidden\">\n\t\t\t\t\t\t\t{isPlaying\n\t\t\t\t\t\t\t\t? __(\"Pause\", \"kotisivu-block-theme\")\n\t\t\t\t\t\t\t\t: __(\"Play\", \"kotisivu-block-theme\")}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{isPlaying ? <StopButton /> : <PlayButton />}\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className=\"audio-player__track-details\">\n\t\t\t\t\t\t<div className=\"audio-player__now-playing\">\n\t\t\t\t\t\t\t<h3>{__(\"Now Playing\", \"kotisivu-block-theme\")}</h3>\n\t\t\t\t\t\t\t<div className=\"audio-player__quality\">\n\t\t\t\t\t\t\t\t<span className=\"audio-player__quality-item\">\n\t\t\t\t\t\t\t\t\t{trackRef.current?.format}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"audio-player__quality-item\">\n\t\t\t\t\t\t\t\t\t{trackRef.current?.sampleRate}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className=\"audio-player__track-name\">\n\t\t\t\t\t\t\t{!trackRef.current?.artist &&\n\t\t\t\t\t\t\t\t__(\"Loading...\", \"kotisivu-block-theme\")}\n\t\t\t\t\t\t\t{trackRef.current?.artist && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<span className=\"audio-player__artist\">\n\t\t\t\t\t\t\t\t\t\t{trackRef.current?.artist}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t:{\" \"}\n\t\t\t\t\t\t\t\t\t<span className=\"audio-player__album\">\n\t\t\t\t\t\t\t\t\t\t{trackRef.current?.album}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!trackRef.current?.featuredImage ? (\n\t\t\t\t\t\t<Placeholder />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"audio-player__cover\"\n\t\t\t\t\t\t\tsrc={trackRef.current?.featuredImage.src}\n\t\t\t\t\t\t\twidth={trackRef.current?.featuredImage.width}\n\t\t\t\t\t\t\theight={trackRef.current?.featuredImage.height}\n\t\t\t\t\t\t\talt={trackRef.current?.featuredImage.alt}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"audio-player__timeline\">\n\t\t\t\t\t<div className=\"audio-player__timeline-elapsed\">\n\t\t\t\t\t\t<span className=\"is-visually-hidden\">\n\t\t\t\t\t\t\t{__(\"Elapsed Time\", \"kotisivu-block-theme\")}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{timeStamp(mediaTime)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<label htmlFor=\"audio-timeline\" className=\"is-visually-hidden\">\n\t\t\t\t\t\t{__(\"Timeline\", \"kotisivu-block-theme\")}\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\tid=\"audio-timeline\"\n\t\t\t\t\t\tvalue={mediaTime}\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={mediaDuration}\n\t\t\t\t\t\tonChange={handleAudioTimelineChange}\n\t\t\t\t\t\taria-valuetext={`${mediaTime} seconds`}\n\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"audio-player__timeline-duration\">\n\t\t\t\t\t\t<span className=\"is-visually-hidden\">\n\t\t\t\t\t\t\t{__(\"Total Duration\", \"kotisivu-block-theme\")}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{timeStamp(mediaDuration)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<audio\n\t\t\t\tclassName=\"is-visually-hidden\"\n\t\t\t\tcontrols\n\t\t\t\tref={playerRef}\n\t\t\t\tsrc={trackRef.current?.src}\n\t\t\t\tonLoadedMetadata={onLoadedMetadata}\n\t\t\t\tonTimeUpdate={onTimeUpdate}\n\t\t\t\tonPlay={() => setIsPlaying(true)}\n\t\t\t\tonPause={() => setIsPlaying(false)}\n\t\t\t/>\n\t\t\t<p className=\"is-visually-hidden\">{`${__(\n\t\t\t\t\"Now playing song\",\n\t\t\t\t\"kotisivu-block-theme\"\n\t\t\t)} ${trackRef.current?.album} ${__(\n\t\t\t\t\"from artist\",\n\t\t\t\t\"kotisivu-block-theme\"\n\t\t\t)} ${trackRef.current?.artist}`}</p>\n\t\t</>\n\t);\n};\n\nexport default AudioPlayer;\n","import { createContext } from '@wordpress/element';\nconst PlayerContext = createContext(null);\n\nexport default PlayerContext;","import { getMediaFiles } from '../../scripts/helpers.js';\nimport { useEffect, useState } from '@wordpress/element';\n\nfunction useMediaFiles(trackRef) {\n    const [files, setFiles] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const getFiles = async () => {\n            let files = await getMediaFiles({\n                per_page: 25,\n                media_type: 'audio',\n            });\n\n            await setFiles(files);\n\n            trackRef.current = {\n                id: 0,\n                title: files[0]?.title?.rendered,\n                album: files[0]?.media_details?.album,\n                artist: files[0]?.media_details?.artist,\n                format: files[0]?.media_details?.fileformat,\n                sampleRate: files[0]?.media_details?.sample_rate,\n                src: files[0]?.source_url,\n                duration: files[0]?.media_details?.length,\n                durationFormatted: files[0]?.media_details?.length_formatted,\n                featuredImage: {\n                    src: files[0]?.metadata?.featured_image?.url,\n                    alt: files[0]?.metadata?.featured_image?.alt,\n                    height: files[0]?.metadata?.featured_image?.height,\n                    width: files[0]?.metadata?.featured_image?.width,\n                    title: files[0]?.metadata?.featured_image?.title\n                }\n            };\n\n            setIsLoading(false);\n        }\n\n        getFiles();\n    }, []);\n\n    return [files, isLoading];\n}\n\nexport { useMediaFiles }\n","import { useEffect, useState, useRef } from '@wordpress/element';\n\nfunction usePlaylistOnScreen(options) {\n    const playlistRef = useRef(null);\n    const [isVisible, setIsVisible] = useState(false);\n\n    const callbackFn = (entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                setIsVisible(true);\n            }\n        });\n    }\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(callbackFn, options);\n        if (playlistRef.current) observer.observe(playlistRef.current);\n\n        return () => {\n            if (playlistRef.current) observer.unobserve(playlistRef.current);\n        }\n    }, [playlistRef.current, options]);\n\n    return [playlistRef, isVisible];\n}\n\nexport { usePlaylistOnScreen }","const Placeholder = (props) => (\n\t<svg\n\t\tclassName=\"music-playlist__placeholder-image\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\txmlSpace=\"preserve\"\n\t\twidth={400}\n\t\theight={400}\n\t\tstyle={{\n\t\t\tfillRule: \"evenodd\",\n\t\t\tclipRule: \"evenodd\",\n\t\t\tstrokeLinejoin: \"round\",\n\t\t\tstrokeMiterlimit: 2,\n\t\t}}\n\t\tviewBox=\"0 0 400 400\"\n\t\t{...props}\n\t>\n\t\t<path\n\t\t\td=\"M0 0h400v400H0z\"\n\t\t\tstyle={{\n\t\t\t\tfill: \"#ebebeb\",\n\t\t\t}}\n\t\t/>\n\t</svg>\n);\nexport { Placeholder };\n","const PlayButton = (props) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\txmlSpace=\"preserve\"\n\t\tstyle={{\n\t\t\tfillRule: \"evenodd\",\n\t\t\tclipRule: \"evenodd\",\n\t\t\tstrokeLinejoin: \"round\",\n\t\t\tstrokeMiterlimit: 2,\n\t\t}}\n\t\tviewBox=\"0 0 1000 1000\"\n    aria-hidden=\"true\"\n\t\t{...props}\n\t>\n\t\t<path\n\t\t\td=\"M500 0c275.958 0 500 224.042 500 500 0 275.958-224.042 500-500 500C224.042 1000 0 775.958 0 500 0 224.042 224.042 0 500 0Zm264 500L336 209.5v581L764 500Z\"\n\t\t\tstyle={{\n\t\t\t\tfill: \"var(--wp--preset--color--primary)\",\n\t\t\t}}\n\t\t/>\n\t</svg>\n);\nexport { PlayButton };\n","const StopButton = (props) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\txmlSpace=\"preserve\"\n\t\tstyle={{\n\t\t\tfillRule: \"evenodd\",\n\t\t\tclipRule: \"evenodd\",\n\t\t\tstrokeLinejoin: \"round\",\n\t\t\tstrokeMiterlimit: 2,\n\t\t}}\n\t\tviewBox=\"0 0 1000 1000\"\n    aria-hidden=\"true\"\n\t\t{...props}\n\t>\n\t\t<path\n\t\t\td=\"M500 0c275.958 0 500 224.042 500 500 0 275.958-224.042 500-500 500C224.042 1000 0 775.958 0 500 0 224.042 224.042 0 500 0Zm-49.799 236H305.522v528h144.679V236Zm244.277 0H549.799v528h144.679V236Z\"\n\t\t\tstyle={{\n\t\t\t\tfill: \"var(--wp--preset--color--primary)\",\n\t\t\t}}\n\t\t/>\n\t</svg>\n);\nexport { StopButton };\n","/*--------------------------------------------------------------\n>>> TABLE OF CONTENTS:\n----------------------------------------------------------------\n0.0 Imports\n--------------------------------------------------------------*/\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\n/*--------------------------------------------------------------\n  1.0 \n--------------------------------------------------------------*/\n\n/**\n * Get media files from the API\n * @param {Object} params\n * @returns {Array} results\n */\nasync function getMediaFiles(params = null) {\n  /**\n   * Create the URL\n   */\n  let apiRequest = new URL(window.location.origin + \"/wp/v2/media\");\n\n  /**\n   * Add the params to the URL\n   */\n  for (const [key, value] of Object.entries(params)) {\n    apiRequest.searchParams.append(key, value);\n  }\n\n  const results = await apiFetch({ path: apiRequest.pathname + apiRequest.search }).then((media) => {\n    return media;\n  });\n\n  return results;\n}\n\nfunction convertEntityToText(str) {\n  const entityCodes = {\n    \"&#8211;\": \"-\",\n  }\n\n  for (const entity in entityCodes) {\n    if (str.indexOf(entity) >= 0) {\n      const newStr = str.replaceAll(entity, entityCodes[entity])\n      return newStr\n    }\n  }\n  return str;\n}\n\n/*--------------------------------------------------------------\n  3.0 Exports\n--------------------------------------------------------------*/\n\nexport { getMediaFiles, convertEntityToText }\n","/**\n * Helper function to check the status of the song\n * @param {String} status - status of the song (play, pause, complete)\n * @returns { String } - status of the song (play, pause, complete, undefined)\n */\nconst checkSongStatus = async (status) => {\n    const VALID_STATUSES = ['play', 'pause', 'complete', 'seek', 'stream'];\n    return VALID_STATUSES.includes(status) ? status : 'undefined';\n}\n\n/**\n * Helper function to format song object\n * @param {Object} song - song object\n * @returns {Object} - formatted song object\n */\nconst formatSong = async ({ id, title, artist, album, sampleRate, format }) => {\n    return {\n        id,\n        title,\n        artist,\n        album,\n        meta: {\n            sampleRate,\n            format,\n        }\n    }\n}\n\n/**\n * Helper function to get the percent range of the song\n * @param {Number} currentTime - current time of the song\n * @param {Number} duration - duration of the song\n * @returns {String} - percent range of the song\n */\nconst getPercentRange = (currentTime, duration) => {\n    const percent = Math.round((currentTime / duration) * 100);\n    const ranges = {\n        '0': 15,\n        '15': 25,\n        '25': 50,\n        '50': 75,\n        '75': 100\n    };\n\n    for (let range in ranges) {\n        if (percent <= ranges[range]) {\n            return range;\n        }\n    }\n}\n\n/**\n * Helper function to format track list\n * @param {Array} tracks - track list\n * @returns {Array} - formatted track list\n */\nconst formatTrackList = async (tracks) => {\n    return tracks.map((track, index) => ({\n        id: index,\n        title: track?.title.rendered,\n        artist: track?.media_details?.artist,\n        album: track?.media_details?.album,\n        meta: {\n            sampleRate: track?.media_details?.sample_rate,\n            format: track?.media_details?.fileformat,\n        },\n        time: {\n            duration: track?.media_details?.length,\n            durationFormatted: track?.media_details?.length_formatted\n        }\n    }));\n}\n\n/**\n * Push music events (play, pause etc.) to dataLayer\n * @param {Object} song - song object\n * @param {Number} currentTime - current time of the song\n * @param {String} status - status of the song (play, pause, complete)\n * @returns { void }\n */\nasync function pushMusicEventsToDatalayer(song, currentTime, status) {\n    const songStatus = await checkSongStatus(status);\n    const songPercent = await getPercentRange(currentTime, song?.duration);\n    const songData = await formatSong(song);\n    const timeData = {\n        current: Math.round(currentTime),\n        duration: song?.duration,\n        percent: Math.round((currentTime / song?.duration) * 100)\n    };\n\n    window.dataLayer = window.dataLayer || [];\n\n    if (songStatus !== 'seek' && songStatus !== 'stream') {\n        window.dataLayer.push({\n            event: `music_${songStatus}`,\n            song: songData,\n            time: timeData\n        });\n    }\n\n    window.dataLayer.push({\n        event: `music_${status}_${songPercent}`,\n        song: songData,\n        time: timeData\n    });\n}\n\n\n/**\n * Push music view events to dataLayer\n * @param {Array} tracks - track list\n * @returns { void }\n */\nasync function pushMusicViewEventsToDataLayer(tracks) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push({\n        event: 'music_view_tracks',\n        songs: await formatTrackList(tracks)\n    });\n}\n\nexport { pushMusicEventsToDatalayer, pushMusicViewEventsToDataLayer }","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { createRoot } from '@wordpress/element';\nimport { __ } from \"@wordpress/i18n\";\nimport domReady from '@wordpress/dom-ready';\nimport { useEffect, useState, useRef } from '@wordpress/element';\n\n/**\n * Contexts\n */\nimport PlayerContext from './context/PlayerContext.js';\n\n/**\n * Hooks\n */\nimport { useMediaFiles, usePlaylistOnScreen } from './hooks';\n\n/**\n * Components\n */\nimport AudioPlayer from './components/AudioPlayer.jsx';\nimport { Placeholder } from './icons';\n\n/**\n * Helpers\n */\nimport { convertEntityToText } from './scripts/helpers';\nimport { pushMusicEventsToDatalayer, pushMusicViewEventsToDataLayer } from '@features/analytics';\n\nconst Playlist = () => {\n    // DOM references to the audio player, current track and current track index\n    const trackRef = useRef(null);\n    const trackIndexRef = useRef(0);\n    const playerRef = useRef(null);\n\n    // App states\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    // Used to force update the component\n    // TODO: Find a better way to do this\n    const [, setForceUpdate] = useState(Date.now());\n\n    /**\n     * Get media files from WordPress Library\n     */\n    const [files, isLoading] = useMediaFiles(trackRef);\n\n    /**\n     * Push music view events to dataLayer when the playlist is visible\n     */\n    const [playlistRef, isVisible] = usePlaylistOnScreen({\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.5\n    });\n\n    useEffect(() => {\n        if (isVisible && files.length !== 0) pushMusicViewEventsToDataLayer(files);\n    }, [isVisible, files]);\n\n    /**\n     * Set the current track\n     * @return {void}\n     */\n    async function setCurrentTrack() {\n        const audioPlayer = playerRef.current;\n\n        const newTrack = await files.find((file, index) => {\n            if (index === trackIndexRef.current) {\n                return file;\n            }\n        });\n\n        trackRef.current = {\n            id: trackIndexRef.current,\n            title: newTrack.title.rendered,\n            album: newTrack.media_details?.album,\n            artist: newTrack.media_details?.artist,\n            format: newTrack.media_details?.fileformat,\n            sampleRate: newTrack.media_details?.sample_rate,\n            src: newTrack.source_url,\n            duration: newTrack.media_details?.length,\n            durationFormatted: newTrack.media_details?.length_formatted,\n            featuredImage: {\n                src: newTrack.metadata?.featured_image?.url,\n                alt: newTrack.metadata?.featured_image?.alt,\n                height: newTrack.metadata?.featured_image?.height,\n                width: newTrack.metadata?.featured_image?.width,\n                title: newTrack.metadata?.featured_image?.title\n            }\n        };\n\n        /**\n         * Force update the component and set focus on the new track\n         */\n        await setForceUpdate(Date.now());\n        const track = document.querySelector(`.audio-player__list-item[aria-current=\"true\"]`);\n        track.focus();\n\n        /**\n         * Play the track\n         */\n        if (!isPlaying) return; // If a track is not currently playing, don't play the new one\n        audioPlayer.play();\n        setIsPlaying(true);\n        pushMusicEventsToDatalayer(\n            trackRef.current,\n            audioPlayer.currentTime,\n            'play'\n        );\n    }\n\n    /**\n     * Handle track change\n     * @param {object} event\n     * @param {object} meta\n     * @return {void}\n     */\n    async function handleTrackChange(event, index, meta) {\n        const audioPlayer = playerRef.current;\n        const oldTrack = trackRef.current;\n\n        /**\n         * Set the trackRef to the new selected track\n         */\n        trackRef.current = meta;\n        trackIndexRef.current = index;\n\n        /**\n         * Force update the component\n         */\n        await setForceUpdate(Date.now());\n\n        /**\n         * If user clicks song that is already playing, pause it\n         */\n        if (isPlaying && trackRef.current.id === oldTrack.id) {\n            audioPlayer.pause();\n            setIsPlaying(false);\n            pushMusicEventsToDatalayer(\n                trackRef.current,\n                audioPlayer.currentTime,\n                'pause'\n            );\n            return;\n        }\n\n        /**\n         * Play the track\n         */\n        audioPlayer.play();\n        setIsPlaying(true);\n\n        /**\n         * Send events to dataLayer (song, currentTime, status)\n         */\n        pushMusicEventsToDatalayer(\n            trackRef.current,\n            audioPlayer.currentTime,\n            'play'\n        );\n    }\n\n    /**\n     * Handle keyboard input like \n     * - spacebar to play/pause\n     * - arrow keys to navigate the playlist\n     * @param {object} event\n     * @return {void}\n     */\n    async function handleKeyboardInput(event) {\n        const audioPlayer = playerRef.current;\n        const activeElementID = parseInt(document.activeElement.dataset.id);\n\n        /**\n         * Toggle play\n         */\n        const togglePlay = async () => {\n            if (isPlaying) {\n                audioPlayer.pause();\n                setIsPlaying(false);\n                pushMusicEventsToDatalayer(\n                    trackRef.current,\n                    audioPlayer.currentTime,\n                    'pause'\n                );\n            } else {\n                audioPlayer.play();\n                setIsPlaying(true);\n                pushMusicEventsToDatalayer(\n                    trackRef.current,\n                    audioPlayer.currentTime,\n                    'play'\n                );\n            }\n        }\n\n        /**\n         * Move track index down\n         */\n        const moveDown = async () => {\n            if (trackIndexRef.current === files.length - 1) {\n                trackIndexRef.current = 0;\n            } else {\n                trackIndexRef.current = trackIndexRef.current + 1;\n            }\n        }\n\n        /**\n         * Move track index up\n         */\n        const moveUp = async () => {\n            if (trackIndexRef.current === 0) {\n                trackIndexRef.current = files.length - 1;\n            } else {\n                trackIndexRef.current = trackIndexRef.current - 1;\n            }\n        }\n\n        /**\n         * Handle keyboard input\n         */\n        switch (event.key) {\n            case ' ':\n                if (activeElementID === trackIndexRef.current) {\n                    togglePlay();\n                } else {\n                    trackIndexRef.current = activeElementID;\n                    const newTrack = await files.find((file, index) => {\n                        if (activeElementID === index) {\n                            return file;\n                        }\n                    });\n\n                    trackRef.current = {\n                        id: trackIndexRef.current,\n                        title: newTrack.title.rendered,\n                        album: newTrack.media_details?.album,\n                        artist: newTrack.media_details?.artist,\n                        format: newTrack.media_details?.fileformat,\n                        sampleRate: newTrack.media_details?.sample_rate,\n                        src: newTrack.source_url,\n                        duration: newTrack.media_details?.length,\n                        durationFormatted: newTrack.media_details?.length_formatted,\n                        featuredImage: {\n                            src: newTrack.metadata?.featured_image?.url,\n                            alt: newTrack.metadata?.featured_image?.alt,\n                            height: newTrack.metadata?.featured_image?.height,\n                            width: newTrack.metadata?.featured_image?.width,\n                            title: newTrack.metadata?.featured_image?.title\n                        }\n                    };\n\n                    // Force update DOM\n                    await setForceUpdate(Date.now());\n\n                    // Play the track\n                    playerRef.current.play();\n                    setIsPlaying(true);\n                    pushMusicEventsToDatalayer(\n                        trackRef.current,\n                        audioPlayer.currentTime,\n                        'play'\n                    );\n                }\n                break;\n            case 'ArrowDown':\n                if (event.target.tagName === 'LI') event.preventDefault();\n                await moveDown();\n                setCurrentTrack();\n\n                break;\n            case 'ArrowUp':\n                if (event.target.tagName === 'LI') event.preventDefault();\n                await moveUp();\n                setCurrentTrack();\n\n                break;\n            default:\n                break;\n        }\n\n        /**\n         * Force update the component\n         */\n        await setForceUpdate(Date.now());\n    }\n\n\n    /**\n     * Render the component\n     */\n    return (\n        <>\n            <PlayerContext.Provider value={{ isPlaying, setIsPlaying }}>\n                {!files.length && isLoading && <div>{__('Loading...', 'kotisivu-block-theme')}</div>}\n                {(!files.length && !isLoading) && <div>{__('No audio files found', 'kotisivu-block-theme')}</div>}\n                {(!isLoading && files.length > 0) &&\n                    <>\n                        <AudioPlayer playerRef={playerRef} trackRef={trackRef} />\n                        <ol\n                            ref={playlistRef}\n                            className=\"audio-player__list\"\n                            aria-label={__('Playlist', 'kotisivu-block-theme')}\n                            role=\"list\"\n                            onKeyDown={(e) => handleKeyboardInput(e)}\n                        >\n                            {files.map((file, index) => {\n                                const meta = {\n                                    id: index,\n                                    title: file.title.rendered,\n                                    album: file.media_details?.album,\n                                    artist: file.media_details?.artist,\n                                    format: file.media_details?.fileformat,\n                                    sampleRate: file.media_details?.sample_rate,\n                                    src: file.source_url,\n                                    duration: file.media_details?.length,\n                                    durationFormatted: file.media_details?.length_formatted,\n                                    featuredImage: {\n                                        src: file.metadata?.featured_image?.url,\n                                        alt: file.metadata?.featured_image?.alt,\n                                        height: file.metadata?.featured_image?.height,\n                                        width: file.metadata?.featured_image?.width,\n                                        title: file.metadata?.featured_image?.title\n                                    }\n                                }\n\n                                return (\n                                    <li\n                                        key={meta.id}\n                                        className=\"audio-player__list-item\"\n                                        role=\"listItem\"\n                                        onClick={(event) => handleTrackChange(event, index, meta)}\n                                        data-id={meta.id}\n                                        data-src={meta.src}\n                                        data-album={meta.album}\n                                        data-artist={meta.artist}\n                                        data-format={meta.format}\n                                        data-samplerate={meta.sampleRate}\n                                        aria-label={`${__('Play song', 'kotisivu-block-theme')} ${index + 1} ${__('of', 'kotisivu-block-theme')} ${files.length} ${__('in playlist', 'kotisivu-block-theme')}`}\n                                        aria-current={trackIndexRef.current === index ? 'true' : 'false'}\n                                        tabIndex=\"0\"\n                                    >\n                                        <span className=\"audio-player__list-item-text\">{convertEntityToText(meta.title)}</span>\n                                        {!meta.featuredImage.src ? <Placeholder /> : (\n                                            <img\n                                                className=\"audio-player__list-item-image\"\n                                                aria-hidden=\"true\"\n                                                src={meta.featuredImage.src}\n                                                alt={meta.featuredImage.alt}\n                                                height={meta.featuredImage.height}\n                                                width={meta.featuredImage.width}\n                                            />\n                                        )}\n                                    </li>\n                                );\n                            })}\n                        </ol>\n                    </>\n                }\n            </PlayerContext.Provider>\n        </>\n    );\n};\n\ndomReady(async function () {\n    createRoot(\n        document.getElementById('audio-player')).render(<Playlist />\n        );\n});\n"],"names":["AudioPlayer","playerRef","trackRef","isPlaying","setIsPlaying","useContext","PlayerContext","mediaTime","setMediaTime","useState","mediaPercent","setMediaPercent","mediaDuration","setMediaDuration","timeStamp","seconds","minutes","Math","floor","secondsLeft","useEffect","async","pushMusicEventsToDatalayer","current","sendStreamEvent","createElement","Fragment","className","tabIndex","onClick","event","audioPlayer","pause","currentTime","play","__","StopButton","PlayButton","format","sampleRate","artist","album","featuredImage","src","width","height","alt","Placeholder","htmlFor","type","id","value","min","max","onChange","playhead","parseFloat","target","controls","ref","onLoadedMetadata","round","duration","onTimeUpdate","onPlay","onPause","createContext","useMediaFiles","files","setFiles","isLoading","setIsLoading","getMediaFiles","per_page","media_type","title","rendered","media_details","fileformat","sample_rate","source_url","length","durationFormatted","length_formatted","metadata","featured_image","url","getFiles","usePlaylistOnScreen","options","playlistRef","useRef","isVisible","setIsVisible","callbackFn","entries","forEach","entry","isIntersecting","observer","IntersectionObserver","observe","unobserve","props","xmlns","xmlSpace","style","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","viewBox","d","fill","params","apiRequest","URL","window","location","origin","key","Object","searchParams","append","apiFetch","path","pathname","search","then","media","convertEntityToText","str","entityCodes","entity","indexOf","replaceAll","checkSongStatus","includes","status","formatSong","meta","getPercentRange","percent","ranges","range","formatTrackList","tracks","map","track","index","time","song","songStatus","songPercent","songData","timeData","dataLayer","push","pushMusicViewEventsToDataLayer","songs","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","Playlist","trackIndexRef","setForceUpdate","Date","now","root","rootMargin","threshold","setCurrentTrack","newTrack","find","file","document","querySelector","focus","handleKeyboardInput","activeElementID","parseInt","activeElement","dataset","togglePlay","tagName","preventDefault","moveDown","moveUp","role","onKeyDown","e","oldTrack","handleTrackChange","domReady","createRoot","getElementById","render"],"sourceRoot":""}